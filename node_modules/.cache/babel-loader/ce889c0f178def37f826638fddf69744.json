{"ast":null,"code":"var _jsxFileName = \"/home/braddock/Documents/dev/ebix/works/ebix-easi-app/src/pages/signup/SignUp.js\";\nimport React, { Component } from 'react';\nimport { registerUser } from '../../auth';\nimport { withRouter } from 'react-router-dom';\nimport './SignUp.css';\nimport $ from 'jquery';\nimport Inputmask from 'inputmask';\nimport LoadingSpinner from '../comum/LoadingSpinner';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSignUp = async e => {\n      e.preventDefault();\n      this.setState({\n        message: ''\n      });\n      const user = {\n        name: this.state.name,\n        phone: this.state.phone,\n        email: this.state.email,\n        profile: 'INSURED'\n      };\n\n      const redirectToLogin = () => {\n        this.props.history.push(\"/\");\n      };\n\n      this.setState({\n        loading: true\n      });\n      const response = await registerUser(user);\n\n      if (!response.error) {\n        this.setState({\n          loading: false\n        });\n        this.setState({\n          message: 'Seu cadastro foi realizado com sucesso. Um e-mail de confirmação com seus dados cadastrais foi enviado para ' + this.state.email + '. Em instantes você será redirecionado para área de Login.'\n        });\n        $('#div-messages').fadeIn(3000);\n        setTimeout(redirectToLogin, 8000);\n      } else {\n        this.setState({\n          loading: false\n        });\n        this.setState({\n          message: 'Não foi possível realizar seu cadastro: ' + response.data\n        });\n        $('#div-messages').fadeOut(5000);\n      }\n    };\n\n    this.state = {\n      name: '',\n      phone: '',\n      email: '',\n      message: '',\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    Inputmask({\n      'mask': '(99) 99999-9999'\n    }).mask($('#phone'));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-messages\",\n      id: \"div-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ajusteTamanho\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"img/logologin.png\",\n      className: \"center-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      required: true,\n      name: \"name\",\n      id: \"name\",\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"text\",\n      className: \"label-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"content-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Nome Completo\"))), React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      required: true,\n      name: \"email\",\n      id: \"email\",\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"text\",\n      className: \"label-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"content-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"E-mail\"))), React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      required: true,\n      name: \"phone\",\n      id: \"phone\",\n      onChange: e => this.setState({\n        phone: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"text\",\n      className: \"label-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"content-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Telefone\"))), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Enviar\"))), this.state.loading ? React.createElement(LoadingSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }) : '');\n  }\n\n}\n\nexport default withRouter(SignUp);","map":{"version":3,"sources":["/home/braddock/Documents/dev/ebix/works/ebix-easi-app/src/pages/signup/SignUp.js"],"names":["React","Component","registerUser","withRouter","$","Inputmask","LoadingSpinner","SignUp","constructor","props","handleSignUp","e","preventDefault","setState","message","user","name","state","phone","email","profile","redirectToLogin","history","push","loading","response","error","fadeIn","setTimeout","data","fadeOut","componentDidMount","mask","render","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {registerUser} from '../../auth';\nimport { withRouter } from 'react-router-dom';\nimport './SignUp.css';\nimport $ from 'jquery';\nimport Inputmask from 'inputmask';\nimport LoadingSpinner from '../comum/LoadingSpinner';\n\nclass SignUp extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            phone: '',\n            email: '',\n            message: '',\n            loading: false\n        }\n    }\n\n\n    componentDidMount() {\n\n        Inputmask({'mask': '(99) 99999-9999'}).mask($('#phone'));\n        \n    }\n\n    handleSignUp = async e => {\n\n        e.preventDefault();\n        \n        this.setState({message: ''})\n    \n        const user = {\n           name: this.state.name,\n           phone: this.state.phone,\n           email: this.state.email,\n           profile: 'INSURED'\n        };\n\n        const redirectToLogin = () => {\n\n            this.props.history.push(\"/\");\n        }\n    \n        this.setState({loading: true});\n\n        const response = await registerUser(user);\n\n        if(!response.error) {\n\n            this.setState({loading: false});\n            \n            this.setState({message: 'Seu cadastro foi realizado com sucesso. Um e-mail de confirmação com seus dados cadastrais foi enviado para ' + this.state.email + '. Em instantes você será redirecionado para área de Login.'})\n            \n            $('#div-messages').fadeIn(3000);\n\n            setTimeout(redirectToLogin, 8000);\n    \n        } else {\n\n            this.setState({loading: false});\n\n            this.setState({message: 'Não foi possível realizar seu cadastro: ' + response.data});\n\n            $('#div-messages').fadeOut(5000);\n\n        }\n    \n    };\n\n    render() {\n        return (\n            <div className=\"signup\">\n                <div className=\"app-messages\" id=\"div-messages\">{this.state.message}</div>\n                <form>\n                <div className=\"ajusteTamanho\">\n                <img src=\"img/logologin.png\" className=\"center-block\" />\n                    <div className=\"form\">\n                    <input type=\"text\" autoComplete=\"off\" required  name=\"name\" id=\"name\" onChange={e => this.setState({ name: e.target.value })}></input>\n                    <label htmlFor=\"text\" className=\"label-name\">\n                        <span className=\"content-name\">\n                        Nome Completo\n                        </span>\n                    </label>\n                    </div>\n                    <div className=\"form\">\n                    <input type=\"text\" autoComplete=\"off\" required name=\"email\" id=\"email\" onChange={e => this.setState({ email: e.target.value })}></input>\n                    <label htmlFor=\"text\" className=\"label-name\">\n                        <span className=\"content-name\">\n                        E-mail\n                        </span>\n                    </label>\n                    </div>\n                    <div className=\"form\">\n                    <input type=\"text\" autoComplete=\"off\" required name=\"phone\" id=\"phone\" onChange={e => this.setState({ phone: e.target.value })}></input>\n                    <label htmlFor=\"text\" className=\"label-name\">\n                        <span className=\"content-name\">\n                        Telefone\n                        </span>\n                    </label>\n                    </div>\n                    <button type=\"submit\" onClick={this.handleSignUp}>Enviar</button>\n                </div>\n                </form>\n                {this.state.loading ? <LoadingSpinner /> : ''}\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(SignUp);"]},"metadata":{},"sourceType":"module"}