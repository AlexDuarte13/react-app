{"ast":null,"code":"import _objectWithoutProperties from \"/home/braddock/Documents/dev/ebix/works/ebix-easi-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/braddock/Documents/dev/ebix/works/ebix-easi-app/src/routes.js\";\nimport React from 'react';\nimport { isAuthenticated } from './auth';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Home from \"./pages/home/Home\";\nimport routesConfig from './routesConfig';\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => isAuthenticated(rest) ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nconst Routes = () => React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, routesConfig.map((value, key) => {\n  if (value.role) {\n    return React.createElement(PrivateRoute, {\n      key: key,\n      path: value.path,\n      component: value.component,\n      exact: value.exact,\n      role: value.role,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(Route, {\n      key: key,\n      path: value.path,\n      component: value.component,\n      exact: value.exact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n})));\n\nexport default Routes;","map":{"version":3,"sources":["/home/braddock/Documents/dev/ebix/works/ebix-easi-app/src/routes.js"],"names":["React","isAuthenticated","BrowserRouter","Route","Switch","Redirect","Home","routesConfig","PrivateRoute","Component","component","rest","props","pathname","state","from","location","Routes","map","value","key","role","path","exact"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAA4BC,IAA5B;;AAAA,SAEjB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAEC,KAAK,IAC1BX,eAAe,CAACU,IAAD,CAAf,GACI,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,GAGI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAAxB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFiB;AAAA,CAArB;;AAWA,MAAMC,MAAM,GAAG,MACX,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQV,YAAY,CAACW,GAAb,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAE7B,MAAGD,KAAK,CAACE,IAAT,EAAe;AACX,WAAO,oBAAC,YAAD;AACH,MAAA,GAAG,EAAED,GADF;AAEH,MAAA,IAAI,EAAED,KAAK,CAACG,IAFT;AAGH,MAAA,SAAS,EAAEH,KAAK,CAACT,SAHd;AAIH,MAAA,KAAK,EAAES,KAAK,CAACI,KAJV;AAKH,MAAA,IAAI,EAAGJ,KAAK,CAACE,IALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAOH,GARD,MAQO;AACH,WAAO,oBAAC,KAAD;AACH,MAAA,GAAG,EAAED,GADF;AAEH,MAAA,IAAI,EAAED,KAAK,CAACG,IAFT;AAGH,MAAA,SAAS,EAAEH,KAAK,CAACT,SAHd;AAIH,MAAA,KAAK,EAAES,KAAK,CAACI,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAMH;AACJ,CAlBD,CAFR,CADJ,CADJ;;AA4BA,eAAeN,MAAf","sourcesContent":["import React from 'react';\nimport { isAuthenticated } from './auth';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Home from \"./pages/home/Home\";\nimport routesConfig from './routesConfig';\n\nconst PrivateRoute = ({ component: Component, ...rest}) => (\n    \n    <Route {...rest} render={props => (\n        isAuthenticated(rest) ? (\n            <Component {...props} />\n        ) : (\n            <Redirect to={{ pathname: '/', state: {from: props.location}}} />\n        )\n    )} />\n);\n\nconst Routes = () => (\n    <BrowserRouter>\n        <Switch>\n            { \n                routesConfig.map((value, key) => {\n\n                    if(value.role) {\n                        return <PrivateRoute\n                            key={key}\n                            path={value.path}\n                            component={value.component}\n                            exact={value.exact}\n                            role= {value.role}\n                        ></PrivateRoute>\n                    } else {\n                        return <Route \n                            key={key}\n                            path={value.path}\n                            component={value.component}\n                            exact={value.exact}\n                        ></Route>\n                    }\n                })\n            }\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Routes;"]},"metadata":{},"sourceType":"module"}