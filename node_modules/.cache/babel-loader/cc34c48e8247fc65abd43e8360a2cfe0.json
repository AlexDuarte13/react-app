{"ast":null,"code":"var _jsxFileName = \"/home/braddock/Documents/dev/ebix/works/ebix-easi-app/src/pages/segurado/Segurado.js\";\nimport React, { Component } from 'react';\nimport Menu from '../menu/Menu';\nimport $ from 'jquery';\nimport Inputmask from 'inputmask';\nimport LoadingSpinner from '../comum/LoadingSpinner';\nimport { registerUser } from '../../auth';\nimport './Segurado.css';\nimport Popup from '../comum/Popup';\n\nclass Segurado extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSend = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const data = {\n        name: this.state.name,\n        email: this.state.email,\n        profile: this.state.profile,\n        phone: this.state.phone\n      };\n      const response = await registerUser(data);\n\n      if (response.error) {\n        let mensagem = response.data;\n\n        if (typeof response.data === 'object') {\n          mensagem = JSON.stringify(mensagem);\n        }\n\n        this.setState({\n          loading: false,\n          mensagem: mensagem,\n          tipoMensagem: 'error'\n        });\n      } else {\n        this.setState({\n          loading: false,\n          mensagem: 'Usu√°rio cadastrado com sucesso.',\n          tipoMensagem: 'success'\n        });\n      }\n\n      this.togglePopup();\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      profile: 'INSURED',\n      mensagem: '',\n      tipoMensagem: '',\n      loading: false,\n      showPopup: false\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n  }\n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  componentDidMount() {\n    Inputmask({\n      'mask': '(99) 99999-9999'\n    }).mask($('#phone'));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"noscript\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"You need to enable JavaScript to run this app.\"), React.createElement(\"div\", {\n      className: \"design-process-content bg-blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Registro de usu\\xE1rio\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row-sub doc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Segurado\")), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleInputChange,\n      autoComplete: \"off\",\n      required: true,\n      className: \"form-control\",\n      name: \"name\",\n      value: this.state.name,\n      id: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"name\",\n      className: \"label-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"content-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Nome completo\")))), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleInputChange,\n      autoComplete: \"off\",\n      required: true,\n      className: \"form-control\",\n      name: \"email\",\n      value: this.state.email,\n      id: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"label-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"content-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"E-mail\")))), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleInputChange,\n      autoComplete: \"off\",\n      required: true,\n      className: \"form-control\",\n      name: \"phone\",\n      value: this.state.phone,\n      id: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"phone\",\n      className: \"label-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"content-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Telefone\")))), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-final\",\n      onClick: this.handleSend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Enviar\"))))), this.state.loading ? React.createElement(LoadingSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }) : '', this.state.showPopup ? React.createElement(Popup, {\n      content: this.state.mensagem,\n      type: this.state.tipoMensagem,\n      closePopup: this.togglePopup.bind(this),\n      size: 'small',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Segurado;","map":{"version":3,"sources":["/home/braddock/Documents/dev/ebix/works/ebix-easi-app/src/pages/segurado/Segurado.js"],"names":["React","Component","Menu","$","Inputmask","LoadingSpinner","registerUser","Popup","Segurado","constructor","props","handleSend","e","preventDefault","setState","loading","data","name","state","email","profile","phone","response","error","mensagem","JSON","stringify","tipoMensagem","togglePopup","showPopup","handleInputChange","bind","event","target","value","type","checked","componentDidMount","mask","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Menu from '../menu/Menu';\nimport $ from 'jquery';\nimport Inputmask from 'inputmask';\nimport LoadingSpinner from '../comum/LoadingSpinner';\nimport {registerUser} from '../../auth';\nimport './Segurado.css';\nimport Popup from '../comum/Popup';\n\nclass Segurado extends Component {\n\n    constructor(props) {\n        \n        super(props);\n\n        this.state = {\n            name: '',\n            email: '',\n            phone: '',\n            profile: 'INSURED',\n            mensagem: '',\n            tipoMensagem: '',\n            loading: false,\n            showPopup: false\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n\n        this.handleSend = this.handleSend.bind(this);\n   \n    }\n\n    togglePopup() {\n        this.setState({\n          showPopup: !this.state.showPopup\n        });\n      }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n    \n        this.setState({\n          [name]: value\n        });\n    }\n\n    handleSend = async e => {\n\n        e.preventDefault();\n\n        this.setState({loading: true});\n\n        const data = {\n            name: this.state.name,\n            email: this.state.email,\n            profile: this.state.profile,\n            phone: this.state.phone\n        };\n\n        const response = await registerUser(data);\n\n        if(response.error) {\n\n            let mensagem = response.data;\n\n            if(typeof(response.data) === 'object') {\n                mensagem = JSON.stringify(mensagem);\n            }\n\n            this.setState({loading: false, mensagem: mensagem, tipoMensagem: 'error'});\n\n        } else {\n\n            this.setState({loading: false, mensagem: 'Usu√°rio cadastrado com sucesso.', tipoMensagem: 'success'});\n\n        }\n\n        this.togglePopup();\n\n    }\n\n    componentDidMount() {\n\n        Inputmask({'mask': '(99) 99999-9999'}).mask($('#phone'));\n        \n    }\n\n    render() {\n        return ( \n            <div>\n                <Menu />\n                <noscript>You need to enable JavaScript to run this app.</noscript>\n                <div className=\"design-process-content bg-blank\">\n                    <h4>Registro de usu√°rio</h4>\n                    <form>\n                       \n                        <div className=\"container\">\n\n                            <div className=\"row-sub doc\">\n                                <h6>Segurado</h6>\n                            </div>\n\n                            <div className=\"col-md-8\">\n                                <div className=\"form\">\n                                    <input type=\"text\" onChange={this.handleInputChange} autoComplete=\"off\" required className=\"form-control\" name=\"name\" value={this.state.name} id=\"name\"></input>\n                                    <label htmlFor=\"name\" className=\"label-name\">\n                                        <span className=\"content-name\">Nome completo</span>\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <div className=\"form\">\n                                    <input type=\"text\" onChange={this.handleInputChange} autoComplete=\"off\" required className=\"form-control\" name=\"email\" value={this.state.email} id=\"email\"></input>\n                                    <label htmlFor=\"email\" className=\"label-name\">\n                                        <span className=\"content-name\">E-mail</span>\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <div className=\"form\">\n                                    <input type=\"text\" onChange={this.handleInputChange} autoComplete=\"off\" required className=\"form-control\" name=\"phone\" value={this.state.phone} id=\"phone\"></input>\n                                    <label htmlFor=\"phone\" className=\"label-name\">\n                                        <span className=\"content-name\">Telefone</span>\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <button type=\"submit\" className=\"btn btn-final\" onClick={this.handleSend}>Enviar</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                {this.state.loading ? <LoadingSpinner /> : ''}\n                {\n                    this.state.showPopup ? \n                        <Popup content={this.state.mensagem} type={this.state.tipoMensagem} closePopup={this.togglePopup.bind(this)} size={'small'} />\n                    : null\n                }\n            </div>\n        )\n    }\n}\n\nexport default Segurado;"]},"metadata":{},"sourceType":"module"}